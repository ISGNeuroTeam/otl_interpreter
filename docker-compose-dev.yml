version: "3.9"

services:
  postgres:
    image: postgres:12.9
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - ./docs/docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis
    ports:
      - "6380:6379"

  zookeeper:
    image: 'bitnami/zookeeper:3.6.3'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:3.0.0'
    ports:
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL

    depends_on:
      - zookeeper

  celery-worker:
    build:
      context: ./
      dockerfile: ./docs/docker/complex_rest/Dockerfile
    image: "complex_rest_for_plugin_celery:1.0.2"
    volumes:
      - ./otl_interpreter:/complex_rest/plugins/otl_interpreter
      - ./ot_simple_rest_job_proxy:/complex_rest/plugins/ot_simple_rest_job_proxy
      - ./docs/docker:/opt/docker

    environment:
      - otl_interpreter_conf=/opt/docker/complex_rest/otl_interpreter.conf

    user: ${CURRENT_UID}

    depends_on:
      - postgres
      - redis
      - kafka
    command: "celery --app core.celeryapp:app worker --loglevel=INFO --concurrency 8"

  celery-beat:
    build:
      context: ./
      dockerfile: ./docs/docker/complex_rest/Dockerfile
    image: "complex_rest_for_plugin_celery:1.0.2"
    volumes:
      - ./otl_interpreter:/complex_rest/plugins/otl_interpreter
      - ./ot_simple_rest_job_proxy:/complex_rest/plugins/ot_simple_rest_job_proxy
      - ./docs/docker:/opt/docker

    environment:
      - otl_interpreter_conf=/opt/docker/complex_rest/otl_interpreter.conf

    user: ${CURRENT_UID}

    depends_on:
      - postgres
      - redis
      - kafka
    command: "celery --app core.celeryapp:app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  complex_rest:
    build:
      context: ./
      dockerfile: ./docs/docker/complex_rest/Dockerfile
    image: "complex_rest_for_plugin:1.0.2"

    volumes:
      - ./otl_interpreter:/complex_rest/plugins/otl_interpreter
      - ./ot_simple_rest_job_proxy:/complex_rest/plugins/ot_simple_rest_job_proxy
      - ./logs:/complex_rest/logs
      - ./tests:/complex_rest/tests
      - ./docs/docker:/opt/docker

    environment:
      - otl_interpreter_conf=/opt/docker/complex_rest/otl_interpreter.conf
    entrypoint: /opt/docker/complex_rest/entrypoint.sh

    user: ${CURRENT_UID}
    ports:
      - "8080:8080"
    command: "python /complex_rest/complex_rest/manage.py runserver [::]:8080"

    depends_on:
      - postgres
      - redis
      - kafka


  dispatcher:
    build:
      context: ./
      dockerfile: ./docs/docker/complex_rest/Dockerfile
    image: "complex_rest_for_plugin:1.0.2"

    volumes:
      - ./otl_interpreter:/complex_rest/plugins/otl_interpreter
      - ./ot_simple_rest_job_proxy:/complex_rest/plugins/ot_simple_rest_job_proxy
      - ./logs:/complex_rest/logs
      - ./tests:/complex_rest/tests
      - ./docs/docker:/opt/docker

    entrypoint: /opt/docker/complex_rest/dispatcher_entrypoint.sh

    environment:
      - otl_interpreter_conf=/opt/docker/complex_rest/otl_interpreter.conf

    user: ${CURRENT_UID}
    command: "python -u /complex_rest/plugins/otl_interpreter/dispatcher/main.py"

    depends_on:
      - postgres
      - redis
      - kafka
      - complex_rest